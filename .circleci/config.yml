version: 2
jobs:
  check_format:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: install development deps
          command: pipenv install -d
      - run:
          name: check code format with hacking
          command: pipenv run flake8
      - run:
          name: check code format with black
          command: pipenv run black --py36 --line-length 110 --check .
      - run:
          name: check code format with isort
          command: pipenv run isort -fas -fass --recursive --force-single-line --check-only --skip venv --skip tests .

      - store_artifacts:
          path: /home/circleci/project/cover/

  test_apispec:
    docker:
      - image: circleci/python:3.6.7-stretch-node-browsers-legacy
      - image: mysql:5.6
        environment:
          MYSQL_DATABASE: casval_local
          MYSQL_ROOT_PASSWORD: admin123
        command: |
          mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    steps:
      - checkout
      - run:
          name: install development deps
          command: |
            sudo apt install -y zlib1g-dev
            pipenv install -d
            pipenv install -d pip==10.0.1
      - run:
          name: install sqlite
          command: |
            wget https://www.sqlite.org/2018/sqlite-autoconf-3260000.tar.gz
            tar xvzf sqlite-autoconf-3260000.tar.gz
            cd sqlite-autoconf-3260000
            ./configure --prefix=/opt/sqlite/sqlite3.26.0/
            make -j
            sudo make install
            cd /usr/local/bin
            sudo ln -s /opt/sqlite/sqlite3.26.0/bin/sqlite3 sqlite3.26
            cd ~/project/
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export PATH=~/.npm-global/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Clone casval-doc
          command: |
            git clone git@github.com:recruit-tech/casval-doc.git
            cd casval-doc
            git checkout enhance/testing
            cd ..
      - run:
          name: Compile apib files
          command: |
            yarn add aglio
            yarn run aglio -c -i ./casval-doc/base.apib -o ./hooks/all.apib
      - run:
          name: install dredd
          command: |
            yarn global add dredd
            cat << 'EOF' >> Pipfile
            dredd = "dredd ./hooks/all.apib localhost:3000 --language=python --hookfiles='./hooks/*.py' --hooks-worker-timeout 20000"
            EOF
      - run:
          name: Run chalice & dredd
          command: |
            export PATH="$PATH:`yarn global bin`"
            pipenv run chalice local --port 3000 --stage local &
            sleep 5;pipenv run python ./chalicelib/apis/fixtures/seed_requests.py seed
            sleep 5;pipenv run dredd
      - run:
          name: Run unit test
          command: |
            export LD_LIBRARY_PATH=/opt/sqlite/sqlite3.26.0/lib
            export AWS_ACCESS_KEY_ID=dummy-access-key
            export AWS_SECRET_ACCESS_KEY=dummy-access-key-secret
            export AWS_DEFAULT_REGION=us-east-1
            pipenv run test

workflows:
  version: 2
  tests:
    jobs:
      - check_format
      - test_apispec
